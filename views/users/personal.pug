extends menu
block block_visitors
    .tab-content.shadow-lg.p-3.mb-5.bg-white.rounded
        .card.border-primary.mb-4.shadow-lg
            .card-header
                span#select-stats(style='margin:20px 20px 0 20px; font-size: 1em;')
                    a Выбрано:
                        span.highlight 0
                #deselect-all.a.btn.btn-outline-info Отменить выбор
                .rouded.float-right
                    #select-cancel.a.btn.btn-outline-danger Отменить участие
                    #select-reschedule.a.btn.btn-outline-primary Перерегистрация
                    #select-attended.a.btn.btn-outline-success Установить как выполнено
            .card-body.text-primary
                #visitorsTable
    script.
        $(document).ready(function () {
            getVisitors();
        })

        function getVisitors() {
            $.ajax({
                type: 'get',
                url: '/edit/events',
                dataType: 'json',
                data: {},
                response: 'json',
                success: function (data) {
                    console.log('======> getVisitors');
                    console.log(data);
                    table.setData(data);
                }
            });
        }
        function cancelVisitors(id, description) {
            console.log(id);
            console.log(description);
            $.ajax({
                type: "put",
                url: '/edit/cancel',
                data: JSON.stringify({'events': description}),
                contentType: 'application/json',
                success: function (data) {
                    console.log(data);
                }
            });
        }

        function attendedVisitors(ids) {
            console.log(ids);
            $.ajax({
                type: 'put',
                url: '/edit/attended',
                data: JSON.stringify({'eventid': ids}),
                contentType: 'application/json',
                success: function (data) {
                    console.log('attendedVisitors ok');
                }
            });
        }

        function rescheduleVisitors(id) {
            console.log(id);
            $.ajax({
                type: 'put',
                url: '/edit/reschedule',
                data: JSON.stringify({'events': id}),
                contentType: 'application/json',
                success: function (data) {
                    console.log('rescheduleVisitors ok');
                }
            });
        }

        var table = new Tabulator("#visitorsTable", {
            height: window.innerHeight - 400,
            layout: "fitColumns",
            movableRows: true,
            // groupBy: "event",
            selectable: true,
            headerFilterPlaceholder: "Фильтр...",
            columns: [ //Define Table Columns
                {title: "Имя и фамилия", field: "name", headerFilter: "input",},
                {title: "e-mail", field: "email", headerFilter: "input"},
                {title: "Событие", field: "event", headerFilter: "input"},
                {title: "Дата события", field: "dateEvent", sorter: "date", align: "center", headerFilter: "input"},
                {title: "Время события", field: "timeEvent", sorter: "time", align: "center", headerFilter: "input"},
                {title: "Дата подписки", field: "dateSign", sorter: "date", align: "center", headerFilter: "input"},
                {title: "Время подписки", field: "timeSign", sorter: "time", align: "center", headerFilter: "input"},
            ],
            rowSelectionChanged: function (data, rows) {
                $("#select-stats span").text(' ' + data.length);
            }
        });
        $("#deselect-all").click(function () {
            table.deselectRow();
        });
        $("#select-cancel").click(function () {
            var selected = table.getSelectedData();
            if (selected.length > 0) {
                console.log("=====> cancel");
                var description = 'Отсмена участия:\n';
                var cancelId = [];
                selected.forEach(function (visitor) {
                    console.log(visitor);
                    cancelId.push({'eventid': visitor.eventid});
                    description += visitor.name + ' ( ' + visitor.email + ' )\n';
                });
                $('#descriptionText')[0].innerText = description;
                remove = function () {
                    cancelVisitors(cancelId, $("#reason").val());
                }
                $("#remove-modal-form").modal();//.modal();
            }
        });

        $("#select-reschedule").click(function () {
            var selected = table.getSelectedData();
            if (selected.length > 0) {
                if (selected.length > 1) {
                    alert('Перерегистрировать можно только отделно по одному участнику!')
                }
                else {
                    console.log("=====> reschedule");
                    rescheduleVisitors(selected[0].id);
                }
            }
        });

        $("#select-attended").click(function () {
            var selected = table.getSelectedData();
            if (selected.length > 0) {
                console.log("=====> attended");
                var attendedId = [];
                selected.forEach(function (visitor) {
                    console.log(visitor);
                    attendedId.push(visitor.eventid);
                });
                attendedVisitors(attendedId);
            }
        });

block block_patterns
    .tab-content.shadow-lg.p-3.mb-5.bg-white.rounded
        .card.border-primary.mb-4.shadow-lg
            .card-header
                //strong Конфигурация
                .rouded.float-right
                    #expander.a.btn.btn-outline-info Развернуть
                    #postConfig.a.btn.btn-outline-success Сохранить
            .card-body.text-primary
                .input-group
                    .input-group-prepend
                        span.input-group-text JSON
                    textarea#json.form-control(aria-label='JSON')
                p.em.small.font-italic#path
                #editor.json-editor

    script.
        function printJSON() {
            console.log('======> printJSON');
            console.log(json_config);
            $('#json').val(JSON.stringify(json_config));
            $('#editor').jsonEditor(json_config, {change: updateJSON, propertyclick: showPath});
        }
        var json_config = {};

        function updateJSON(data) {
            json_config = data;
            $('#json').val(JSON.stringify(json_config));
            console.log('======> updateJSON');
            console.log(data);
        }
        function showPath(path) {
            $('#path').text(path);
        }
        $(document).ready(function () {
            $('#json').change(function () {
                console.log('======> change');
                var val = $('#json').val();
                if (val) {
                    try {
                        json_config = JSON.parse(val);
                    }
                    catch (e) {
                        alert('Error in parsing json. ' + e);
                    }
                } else {
                    json_config = {};
                }
                printJSON();
            });

            $('#expander').click(function () {
                var editor = $('#editor');
                editor.toggleClass('expanded');
                $(this).text(editor.hasClass('expanded') ? 'Свернуть' : 'Развернуть');
            });

            $("#postConfig").click(function () {
                postConfig(json_config);
            });

            function getConfig() {
                $.ajax({
                    type: 'get',
                    url: '/edit/config',
                    dataType: 'json',
                    data: {},
                    response: 'json',
                    success: function (data) {
                        console.log('======> getConfig');
                        console.log(data);
                        json_config = data;
                        printJSON();
                    }
                });
            }

            getConfig();

            function postConfig(config) {
                console.log('======> postConfig');
                console.log(config);
                $.ajax({
                    type: 'post',
                    url: '/edit/config',
                    data: JSON.stringify(config),
                    contentType: 'application/json',
                    response: 'json',
                    success: function (data) {
                        console.log('======> postConfig ok');
                    }
                });
            }

            $(".updateData").click(function () {
                getConfig();
            });


        });
